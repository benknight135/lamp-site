name: Deployment

# Only trigger on main branch pull request close events
# used to deploy code after merging
# Versioning is automatically generated when merging, this is created by detecting the branch prefix:
# - 'major' prefix for major release (e.g. N.x.x)
# - 'minor' or 'feature' prefix for minor release (e.g. x.N.x)
# - 'patch' or 'bugfix' prefix for patch release (e.g. x.x.N)
# - no prefix for prepatch release (e.g. x.x.x-N)
on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: production
    steps:
      # Checkout code
      - uses: actions/checkout@v2
      # Setup environment
      - uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"
      - uses: "ramsey/composer-install@v1"
      # Run Tests
      - name: Tests
        run: ./vendor/bin/phpunit
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
      # Merge branch into production
      - name: Merge main -> prod
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: prod
          github_token: ${{ github.token }}
          message: merged ${{ steps.commit-vars.outputs.sha_short }}
      # Merge main back to production
      - name: Merge prod -> main
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: prod
          target_branch: main
          github_token: ${{ github.token }}
          message: merged ${{ steps.commit-vars.outputs.sha_short }}
