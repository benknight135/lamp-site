{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subscriptionId": {
            "type": "String"
        },
        "name": {
            "type": "String"
        },
        "location": {
            "type": "String"
        },
        "hostingPlanName": {
            "type": "String"
        },
        "serverFarmResourceGroup": {
            "type": "String"
        },
        "databaseName": {
            "type": "String"
        },
        "sku": {
            "type": "String"
        },
        "skuCode": {
            "type": "String"
        },
        "workerSize": {
            "type": "String"
        },
        "workerSizeId": {
            "type": "String"
        },
        "numberOfWorkers": {
            "type": "String"
        },
        "linuxFxVersion": {
            "type": "String"
        },
        "storageSizeMB": {
            "type": "Int"
        },
        "haEnabled": {
            "type": "String"
        },
        "availabilityZone": {
            "type": "String"
        },
        "backupRetentionDays": {
            "type": "Int"
        },
        "geoRedundantBackup": {
            "type": "String"
        },
        "vmName": {
            "type": "String"
        },
        "storageAutogrow": {
            "type": "String"
        },
        "storageIops": {
            "type": "Int"
        },
        "publicNetworkAccess": {
            "type": "String"
        },
        "vnetData": {
            "type": "Object"
        },
        "infrastructureEncryption": {
            "type": "String"
        },
        "serverEdition": {
            "type": "String"
        },
        "vCores": {
            "type": "Int"
        },
        "serverName": {
            "type": "String"
        },
        "serverUsername": {
            "type": "String"
        },
        "serverPassword": {
            "type": "SecureString"
        }
    },
    "variables": {
        "api": "2020-07-01-privatepreview",
        "version": "5.7",
        "networkResourcesDeploymentName": "NetworkResourceDeploymentForDatabase"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "[variables('networkResourcesDeploymentName')]",
            "location": "[parameters('location')]",
            "resources": [
                {
                    "type": "Microsoft.Network/virtualNetworks/subnets",
                    "apiVersion": "2020-05-01",
                    "name": "[concat(parameters('vnetData').virtualNetworkName, '/', parameters('vnetData').subnetName)]",
                    "dependsOn": [
                        "[concat('Microsoft.Resources/deployments', '/', variables('networkResourcesDeploymentName'))]"
                    ],
                    "properties": "[parameters('vnetData').subnetProperties]",
                    "condition": "[parameters('vnetData').subnetNeedsUpdate]"
                },
                {
                    "type": "Microsoft.Network/virtualNetworks",
                    "apiVersion": "2020-05-01",
                    "name": "[parameters('vnetData').virtualNetworkName]",
                    "location": "[parameters('vnetData').location]",
                    "dependsOn": [
                        "[concat('Microsoft.Resources/deployments', '/', variables('networkResourcesDeploymentName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "addressSpace": {
                            "addressPrefixes": [
                                "[parameters('vnetData').virtualNetworkAddressPrefix]"
                            ]
                        },
                        "subnets": [
                            {
                                "name": "[parameters('vnetData').subnetName]",
                                "properties": "[parameters('vnetData').subnetProperties]"
                            }
                        ]
                    },
                    "condition": "[parameters('vnetData').isNewVnet]"
                }
            ],
            "subscriptionId": "[parameters('vnetData').subscriptionId]",
            "resourceGroup": "[parameters('vnetData').virtualNetworkResourceGroupName]",
            "condition": "[or(parameters('vnetData').isNewVnet, parameters('vnetData').subnetNeedsUpdate)]"
        },
        {
            "type": "Microsoft.DBforMySQL/flexibleServers",
            "apiVersion": "[variables('api')]",
            "name": "[parameters('serverName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments', '/', variables('networkResourcesDeploymentName'))]"
            ],
            "tags": {},
            "sku": {
                "name": "[parameters('vmName')]",
                "tier": "[parameters('serverEdition')]",
                "capacity": "[parameters('vCores')]"
            },
            "properties": {
                "version": "[variables('version')]",
                "administratorLogin": "[parameters('serverUsername')]",
                "administratorLoginPassword": "[parameters('serverPassword')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "DelegatedSubnetArguments": "[if(empty(parameters('vnetData').delegatedSubnetArguments), json('null'), parameters('vnetData').delegatedSubnetArguments)]",
                "haEnabled": "[parameters('haEnabled')]",
                "storageProfile": {
                    "storageMB": "[parameters('storageSizeMB')]",
                    "backupRetentionDays": "[parameters('backupRetentionDays')]",
                    "geoRedundantBackup": "[parameters('geoRedundantBackup')]",
                    "storageIops": "[parameters('storageIops')]",
                    "storageAutogrow": "[parameters('storageAutogrow')]"
                },
                "availabilityZone": "[parameters('availabilityZone')]",
                "dataencryption": {
                    "infrastructureEncryption": "[parameters('infrastructureEncryption')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-11-01",
            "name": "[parameters('hostingPlanName')]",
            "location": "[parameters('location')]",
            "tags": {},
            "sku": {
                "Tier": "[parameters('sku')]",
                "Name": "[parameters('skuCode')]"
            },
            "kind": "linux",
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "workerSize": "[parameters('workerSize')]",
                "workerSizeId": "[parameters('workerSizeId')]",
                "numberOfWorkers": "[parameters('numberOfWorkers')]",
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "[concat('Microsoft.DBforMySQL/flexibleServers/', parameters('serverName'))]"
            ],
            "tags": {},
            "properties": {
                "name": "[parameters('name')]",
                "siteConfig": {
                    "linuxFxVersion": "[parameters('linuxFxVersion')]",
                    "connectionStrings": [
                        {
                            "name": "defaultConnection",
                            "ConnectionString": "[concat('Database=mysql;Server=','lampsite-sql-server.mysql.database.azure.com',';User Id=',parameters('serverUsername'),'@','lampsite-sql-server.mysql.database.azure.com',';Password=',parameters('serverPassword'))]",
                            "type": "MySQL"
                        }
                    ],
                    "appSettings": []
                },
                "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "clientAffinityEnabled": false
            }
        }
    ]
}
